
Deshacer cambios en Git: git checkout, git revert y git reset

La siguiente entrada es una traducción de:

 Undo Changes in Git: git checkout, git revert, & git reset
https://www.nobledesktop.com/learn/git/undo-changes

 

Aprenda cómo deshacer cambios locales, confirmaciones específicas y últimas confirmaciones en Git a través de esta guía completa. Domina los comandos y los pasos para navegar por tu repositorio de Git y mantener tus proyectos limpios y sin errores.
Ideas clave

    Los cambios locales no confirmados en Git se pueden deshacer navegando a la carpeta del repositorio de Git en su terminal, ejecutando git status para ver los archivos afectados y ejecutando el comando 'git checkout filename.html', que revierte el archivo a su estado anterior. comprometerse.
    Una confirmación específica que se ha enviado se puede deshacer utilizando el hash único para la confirmación. El hash de confirmación se puede encontrar en el historial de confirmaciones en GitHub, Bitbucket o ejecutando 'git log --oneline' en su terminal. El comando 'git revert 2f5451f --no-edit' creará una nueva confirmación que invierte la confirmación existente.
    La última confirmación que aún no se ha enviado se puede deshacer ejecutando 'git reset --soft HEAD~' en su terminal. Este comando deshace la última confirmación, mantiene los cambios en su lugar y devuelve los archivos al área de preparación.
    Los cambios locales que se han confirmado pero que aún no se han implementado se pueden deshacer ejecutando 'git reset 2f5451f' o 'git reset --hard 2f5451f' en su terminal. Mientras que el comando 'git reset' elimina las confirmaciones pero mantiene los cambios como no confirmados, 'git reset --hard' deshace las confirmaciones y descarta los cambios.
    Navegue por los comandos y pasos para deshacer cambios y confirmaciones en Git con proyectos del mundo real a través de cursos integrales. Estos cursos los ofrece Noble Desktop y los imparten instructores expertos.
    Se encuentran disponibles oportunidades para un mayor aprendizaje y desarrollo de habilidades a través de una variedad de cursos y campamentos de entrenamiento que se ofrecen en áreas como desarrollo web, Python, ciencia de datos y diseño web.

A veces cometes un error y quieres volver a una versión anterior. Aquí se explica cómo revertir los cambios.

 
Deshacer cambios locales en que no se ha hecho commit
Si ha realizado cambios que no le gustan y aún no ha hecho commit , haga lo siguiente:

    En su terminal (Terminal, Git Bash o Símbolo del sistema de Windows), navegue hasta la carpeta de su repositorio de Git.
    Ejecute git status y debería ver el archivo afectado en la lista.
    Ejecute el siguiente comando, reemplazando nombre de archivo.html con la ruta de su archivo (que puede copiar y pegar desde el comando git status):
        git checkout nombre de archivo.html
    Ese archivo ahora se ha revertido a la forma en que estaba en la confirmación anterior (antes de sus cambios).

Deshacer un commit específico (que ha sido hecho push)
Si tiene un commit específico que desea deshacer, puede revertirla de la siguiente manera:

    En su terminal (Terminal, Git Bash o Símbolo del sistema de Windows), navegue hasta la carpeta de su repositorio de Git.
    Ejecute git status y asegúrese de tener un árbol de trabajo limpio.
    Cada confirmación tiene un hash único (que se parece a 2f5451f ). Necesita encontrar el hash de la confirmación que desea deshacer. Aquí hay dos lugares donde puedes ver el hash de las confirmaciones:
        En el historial de confirmaciones en GitHub, Bitbucket o sitio web.
        En su terminal (Terminal, Git Bash o Símbolo del sistema de Windows) ejecute el comando
 
git log --oneline
    Una vez que conozca el hash de la confirmación que desea deshacer, ejecute el siguiente comando (reemplazando 2f5451f con el hash de su confirmación):

git revert 2f5451f --no-edit

        NOTA: La opción --no-edit evita que git le pida que ingrese un mensaje de confirmación. Si no agrega esa opción, terminará en el editor de texto VIM. Para salir de VIM, presione : para ingresar al modo de comando, luego q para salir y finalmente presione Retorno (Mac) o Intro (Windows).
    Esto realizará una nueva confirmación que es lo opuesto a la confirmación existente, revirtiendo los archivos a su estado anterior como si nunca hubieran sido cambiados.
    Si trabaja con un repositorio remoto, ahora puede enviar esos cambios:
        git empujar

Deshacer el último commit (que no ha sido hecho push)

Si cometió un error en su última confirmación y aún no lo ha presionado, puede deshacerlo. Por ejemplo, tal vez agregaste algunos archivos e hiciste una confirmación, y luego inmediatamente te diste cuenta de que olvidaste algo. Puede deshacer la confirmación y luego realizar una nueva confirmación (correcta). Esto mantendrá su historial más limpio.

    En su terminal (Terminal, Git Bash o Símbolo del sistema de Windows), navegue hasta la carpeta de su repositorio de Git.
    Ejecute este comando:
        git reset --soft HEAD~
        SUGERENCIA: agregue un número al final para deshacer varias confirmaciones. Por ejemplo, para deshacer las últimas 2 confirmaciones (suponiendo que ambas no hayan sido enviadas), ejecute git reset --soft HEAD~2
        NOTA: git reset --soft HEAD~ es lo mismo que git reset --soft HEAD^ que puedes ver en la documentación de Git.
    Su última confirmación ahora se deshará. Sus cambios permanecen en su lugar y los archivos vuelven a ser preparados (por ejemplo, con git add) para que pueda realizar cambios adicionales o agregar los archivos que faltan. Luego puedes realizar una nueva confirmación.


Deshacer cambios locales que se han hecho commit (pero no hecho push)

Si ha realizado confirmaciones locales que no le gustan y aún no se han enviado, puede restablecer las cosas a una buena confirmación anterior. Será como si las malas confirmaciones nunca hubieran ocurrido. Así es cómo:

    En su terminal (Terminal, Git Bash o Símbolo del sistema de Windows), navegue hasta la carpeta de su repositorio de Git.
    Ejecute git status y asegúrese de tener un árbol de trabajo limpio.
    Cada confirmación tiene un hash único (que se parece a 2f5451f ). Necesita encontrar el hash para la última confirmación buena (a la que desea volver). Aquí hay dos lugares donde puedes ver el hash de las confirmaciones:
        En el historial de confirmaciones en GitHub, Bitbucket o sitio web.
        En su terminal (Terminal, Git Bash o Símbolo del sistema de Windows) ejecute el comando git log --oneline
    Una vez que conozca el hash de la última confirmación buena (a la que desea volver), ejecute el siguiente comando (reemplazando 2f5451f con el hash de su confirmación):
        restablecer git 2f5451f
        reinicio de git --hard 2f5451f
        NOTA: Si realiza git reset, las confirmaciones se eliminarán, pero los cambios aparecerán como no confirmados, lo que le dará acceso al código. Esta es la opción más segura, porque tal vez quisieras algo de ese código y ahora puedes realizar cambios y nuevas confirmaciones que son buenas. Sin embargo, a menudo querrás deshacer las confirmaciones y eliminar el código, que es lo que hace git reset --hard .

 
