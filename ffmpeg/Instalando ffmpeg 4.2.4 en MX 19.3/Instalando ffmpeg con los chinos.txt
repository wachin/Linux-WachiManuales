


調子に乗ってきたので全部乗せffmpegを目指す話 - ねこにコベイン
https://nyarinkopv.hatenablog.com/entry/2020/05/11/232455


sudo apt update && sudo apt install autoconf automake build-essential cmake git-core libtool pkg-config texinfo wget \
  zlib1g-dev nasm yasm libsdl2-dev libva-dev libvdpau-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev libchromaprint-dev \
  frei0r-plugins-dev ladspa-sdk libaom-dev libaribb24-dev libass-dev libbs2b-dev libcaca-dev libcdio-paranoia-dev libcdio-dev \
  libcdparanoia-dev libcodec2-dev libraw1394-dev libfdk-aac-dev flite1-dev libfontconfig1-dev libfreetype6-dev \
  libfribidi-dev libgme-dev libgsm1-dev libjack-jackd2-dev liblensfun-dev libmodplug-dev libmp3lame-dev \
  libopencore-amrnb-dev libopencore-amrwb-dev libopenjp2-7-dev libopenmpt-dev libogg-dev libopus-dev libpulse-dev \
  librsvg2-dev librubberband-dev libshine-dev libsnappy-dev libsoxr-dev libspeex-dev libssh-dev libtheora-dev \
  libtwolame-dev libvidstab-dev libvo-amrwbenc-dev libvorbis-dev libvpx-dev libwavpack-dev libwebp-dev libx264-dev \
  libx265-dev libnuma-dev libxvidcore-dev libzmq3-dev libzvbi-dev libmysofa-dev libopenal-dev libssl-dev libvulkan-dev



PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build" \
  --pkg-config-flags="--static" --extra-cflags="-I$HOME/ffmpeg_build/include" --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
  --extra-libs="-lpthread -lm" --bindir="$HOME/bin" --enable-gpl --enable-nonfree --enable-version3 \
  --enable-chromaprint --enable-frei0r --enable-ladspa --enable-libaom --enable-libaribb24 --enable-libass --enable-libbs2b \
  --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdc1394 --enable-libfdk-aac --enable-libflite --enable-libfontconfig \
  --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-liblensfun --enable-libmodplug \
  --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopenmpt \
  --enable-libopus --enable-libpulse --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr \
  --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvo-amrwbenc \
  --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxvid \
  --enable-libzmq --enable-libzvbi --enable-libmysofa --enable-openal --enable-opengl --enable-openssl --enable-vulkan



PATH="$HOME/bin:$PATH" make -j4 && make install && hash -r



***************
voy a ver como me va

*******************

Tengo que desactivar:  

--enable-vulkan
--enable-libsrt

porque no me reconoce la opción

y saco a:

 --enable-libmysofa 

por este error

ibavfilter/af_sofalizer.c:166:32: error: implicit declaration of function ‘mysofa_neighborhood_init_withstepdefine’; did you mean ‘mysofa_neighborhood_init’? [-Werror=implicit-function-declaration]
         s->sofa.neighborhood = mysofa_neighborhood_init_withstepdefine(s->sofa.hrtf,
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                mysofa_neighborhood_init
libavfilter/af_sofalizer.c:166:30: warning: assignment to ‘struct MYSOFA_NEIGHBORHOOD *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]x
         s->sofa.neighborhood = mysofa_neighborhood_init_withstepdefine(s->sofa.hrtf,




AÑADIR A:

gedit .bashrc

lo siguiente:


export PATH=$HOME/bin:$PATH
export LD_LIBRARY_PATH=$HOME/lib/:$LD_LIBRARY_PATH


y guardar y reiniciar




PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build" \
  --pkg-config-flags="--static" --extra-cflags="-I$HOME/ffmpeg_build/include" --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
  --extra-libs="-lpthread -lm" --bindir="$HOME/bin" --enable-gpl --enable-nonfree --enable-version3 \
  --enable-chromaprint --enable-frei0r --enable-ladspa --enable-libaom --enable-libaribb24 --enable-libass --enable-libbs2b \
  --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdc1394 --enable-libfdk-aac --enable-libflite --enable-libfontconfig \
  --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-liblensfun --enable-libmodplug \
  --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopenmpt \
  --enable-libopus --enable-libpulse --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr \
  --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvo-amrwbenc \
  --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxvid \
  --enable-libzmq --enable-libzvbi --enable-openal --enable-opengl --enable-openssl

ahí si, y ahora:

PATH="$HOME/bin:$PATH" make -j4 && make install && hash -r


y se está construyendo




