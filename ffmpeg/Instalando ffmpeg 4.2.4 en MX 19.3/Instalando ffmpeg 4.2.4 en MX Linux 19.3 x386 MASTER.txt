

Cómo instalar FFmpeg 4.2.4 en MX Linux 19 (Basado en Debian 10)

Dependencias:

sudo apt update && sudo apt install build-essential libfaac-dev libfaac-dev \
 libgnutls28-dev liblilv-dev libiec61883-dev libbluray-dev libdc1394-22-dev \
 libomxil-bellagio-dev autoconf automake cmake git-core libtool pkg-config \
 texinfo wget zlib1g-dev nasm yasm libsdl2-dev libva-dev libvdpau-dev \
 libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev libchromaprint-dev \
 frei0r-plugins-dev ladspa-sdk libaom-dev libaribb24-dev libass-dev \
 libbs2b-dev libcaca-dev libcdio-paranoia-dev libcdio-dev libcdparanoia-dev \
 libcodec2-dev libraw1394-dev libfdk-aac-dev flite1-dev libfontconfig1-dev \
 libfreetype6-dev libfribidi-dev libgme-dev libgsm1-dev libjack-jackd2-dev \
 liblensfun-dev libmodplug-dev libmp3lame-dev libopencore-amrnb-dev \
 libopencore-amrwb-dev libopenjp2-7-dev libopenmpt-dev libogg-dev libopus-dev \
 libpulse-dev librsvg2-dev librubberband-dev libshine-dev libsnappy-dev \
 libsoxr-dev libspeex-dev libssh-dev libtheora-dev libtwolame-dev libvidstab-dev \
 libvo-amrwbenc-dev libvorbis-dev libvpx-dev libwavpack-dev libwebp-dev \
 libx264-dev libx265-dev libnuma-dev libxvidcore-dev libzmq3-dev libzvbi-dev \
 libopenal-dev libssl-dev libvulkan-dev libcunit1-dev libcunit1 libdrm-dev git



Instalar la dependencia libmysofa-dev a parte

git clone https://github.com/hoene/libmysofa
cd libmysofa
cd build
cmake ..
cpack
sudo dpkg -i *.deb
cd ../../



Descargar ffmpeg 4.2.4 de:

https://github.com/FFmpeg/FFmpeg/releases/tag/n4.2.4

o desde la línea de comandos:

wget -c https://github.com/FFmpeg/FFmpeg/archive/refs/tags/n4.2.4.tar.gz

extraiga el contenido y entre en el directorio y ponga:

./configure --prefix=/usr --extra-version='mx19' --toolchain=hardened \
  --enable-gpl --disable-stripping --enable-avresample --disable-filter=resample \
  --enable-avisynth --enable-gnutls --enable-ladspa --enable-libaom --enable-libass \
  --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 \
  --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi \
  --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libopenjpeg \
  --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librsvg \
  --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr \
  --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame \
  --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwavpack  --enable-libwebp \
  --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi \
  --enable-lv2 --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 \
  --enable-libdrm --enable-chromaprint --enable-frei0r --enable-libx264 --enable-libmysofa \
  --ignore-tests='hapenc-hap-none,hapenc-hapa-none,hapenc-hapq-none' --enable-shared
  
make 
sudo make install




y se instaló, y para revisar que esté instalada la versión 4.2.4 poner:

ffmpeg version




CONSULTAS:

Installing Ffmpeg on Debian GNU/Linux – Asset Bank Help Centre
https://support.assetbank.co.uk/hc/en-gb/articles/115005343247-Installing-Ffmpeg-on-Debian-GNU-Linux

En el siguiente dijeron como instalar ffmpeg en usr con ./configure --prefix=/usr/
Configuring install path: prefix=[PREFIX] not fully understood
https://stackoverflow.com/a/36998743

ffmpeg install error RPi 3 B+ · Issue #26 · legotheboss/YouTube-files · GitHub
https://github.com/legotheboss/YouTube-files/issues/26

調子に乗ってきたので全部乗せffmpegを目指す話 - ねこにコベイン
https://nyarinkopv.hatenablog.com/entry/2020/05/11/232455

##############################################################################

SOBRE ACTIVAR LAS OPCIONES NON-FREE
Al activar estas opciones debido a las restricciones de copyright no se podrá crear un deb y distribuirlo a otras personas sino sólo usar uno mismo el ffmpeg que uno ha creado para uso personal


COMPILAR FFMPEG CON NON-FREE

./configure --prefix=/usr --extra-version='mx19' --toolchain=hardened --libdir=/usr/lib/i386-linux-gnu --incdir=/usr/include/i386-linux-gnu --arch=i386 --enable-gpl --disable-stripping --enable-avresample --disable-filter=resample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-chromaprint --enable-frei0r --enable-libx264 --enable-libmysofa --enable-nonfree --enable-libfdk-aac 
 --ignore-tests='hapenc-hap-none,hapenc-hapa-none,hapenc-hapq-none' --enable-shared



Explicaciones de Parámetros añadidos:

--enable-nonfree

--enable-libfdk-aac 


--enable-version3

Should you, for whatever reason, prefer to use version 3 of the (L)GPL, then the configure parameter --enable-version3 will activate this licensing option for you. Read the file COPYING.LGPLv3 or, if you have enabled GPL parts, COPYING.GPLv3 to learn the exact legal terms that apply in this case.

There are a handful of files under other licensing terms, namely:

    The files libavcodec/jfdctfst.c, libavcodec/jfdctint_template.c and libavcodec/jrevdct.c are taken from libjpeg, see the top of the files for licensing details. Specifically note that you must credit the IJG in the documentation accompanying your program if you only distribute executables. You must also indicate any changes including additions and deletions to those three files in the documentation.
    tests/reference.pnm is under the expat license.

external libraries

FFmpeg can be combined with a number of external libraries, which sometimes affect the licensing of binaries resulting from the combination.
compatible libraries

The following libraries are under GPL:

    frei0r
    libcdio
    libutvideo
    libvidstab
    libx264
    libx265
    libxavs
    libxvid

When combining them with FFmpeg, FFmpeg needs to be licensed as GPL as well by passing --enable-gpl to configure.

The OpenCORE and VisualOn libraries are under the Apache License 2.0. That license is incompatible with the LGPL v2.1 and the GPL v2, but not with version 3 of those licenses. So to combine these libraries with FFmpeg, the license version needs to be upgraded by passing --enable-version3 to configure.
incompatible libraries

The Fraunhofer AAC library, FAAC and aacplus are under licenses which are incompatible with the GPLv2 and v3. We do not know for certain if their licenses are compatible with the LGPL. If you wish to enable these libraries, pass --enable-nonfree to configure. But note that if you enable any of these libraries the resulting binary will be under a complex license mix that is more restrictive than the LGPL and that may result in additional obligations. It is possible that these restrictions cause the resulting binary to be unredistributeable. 



FFmpeg: LICENSE
https://www.ffmpeg.org/doxygen/2.6/md_LICENSE.html
